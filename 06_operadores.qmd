# Operadores en R

En R, los operadores son herramientas fundamentales que permiten realizar cálculos, comparaciones, asignaciones y manipulaciones de datos. Son el equivalente a las herramientas básicas de un taller, que se combinan para construir soluciones más complejas. Comprender su funcionamiento es esencial para aprovechar al máximo las capacidades del lenguaje en el análisis estadístico y la programación (R Core Team, 2023).

Los operadores en R se clasifican en diferentes categorías según su función. A continuación, se describen los principales tipos de operadores disponibles en el lenguaje, junto con ejemplos prácticos para ilustrar su uso.

| **Tipo de Operador** | **Ejemplo** | **Descripción** |
|----|----|----|
| **Aritméticos** | `+`, `-`, `*`, `/` | Realizan operaciones matemáticas básicas como suma, resta, multiplicación, etc. |
| **Lógicos** | `>`, `<`, `==`, `!=` | Comparan valores y devuelven un resultado lógico (`TRUE` o `FALSE`). |
| **Asignación** | `<-`, `=` | Asignan valores a objetos. |
| **Manipulación de datos** | `$`, `[]`, `:` | Acceden o manipulan elementos dentro de estructuras de datos. |

## Operadores de Asignación

En R, los operadores de asignación permiten crear objetos y almacenar valores en ellos, lo que constituye una de las bases para la manipulación de datos y la programación en este lenguaje. Los dos operadores de asignación más utilizados son `<-` y `=`. Ambos operadores cumplen la función de asignar un valor a un objeto, sin embargo, la convención en la comunidad de R es emplear `<-`, ya que este evita posibles ambigüedades con el operador lógico de igualdad (`==`) y mantiene la claridad en el código (Ihaka & Gentleman, 1996).

Por ejemplo, al ejecutar la instrucción `x <- 10`, se asigna el valor 10 al objeto x. De manera similar, `y = 20` asigna el valor 20 al objeto y, aunque esta forma es menos recomendada en contextos profesionales. Posteriormente, es posible utilizar estos objetos en operaciones, como se muestra a continuación:

```{r}
# Asignación de valores a objetos
x <- 10          
y = 20           

# Uso de objetos
x + y    # Resultado: 30

```

Es importante destacar que, aunque el operador = puede emplearse para asignar valores, su uso puede generar confusiones, especialmente cuando se trabaja con expresiones lógicas, ya que = también se utiliza en otros contextos dentro del lenguaje. Por esta razón, se recomienda preferir el uso de \<- para la asignación de valores en la mayoría de los casos (Ihaka & Gentleman, 1996).

## Operadores aritméticos

Los operadores aritméticos permiten realizar operaciones matemáticas básicas y avanzadas. Son fundamentales para trabajar con datos numéricos y realizar cálculos en análisis estadísticos. Estos operadores operan sobre valores numéricos y devuelven resultados numéricos. Los operadores aritméticos permiten realizar operaciones matemáticas básicas y avanzadas. Son fundamentales para trabajar con datos numéricos y realizar cálculos en análisis estadísticos. Estos operadores operan sobre valores numéricos y devuelven resultados numéricos (R Core Team, 2023).

A continuación se presenta un cuadro con los principales operadores aritméticos disponibles en R y las operaciones que ejecutan:

| **Operador** | **Acción**       | **Ejemplo** | **Resultado** |
|--------------|------------------|-------------|---------------|
| `+`          | Suma             | `5 + 3`     | `8`           |
| `-`          | Resta            | `10 - 4`    | `6`           |
| `*`          | Multiplicación   | `6 * 2`     | `12`          |
| `/`          | División         | `15 / 3`    | `5`           |
| `^`          | Potencia         | `2 ^ 3`     | `8`           |
| `%/%`        | División entera  | `17 %/% 5`  | `3`           |
| `%%`         | Módulo o residuo | `17 %% 5`   | `2`           |

## Operadores lógicos

Los operadores lógicos desempeñan un papel fundamental en la evaluación de condiciones y la toma de decisiones dentro del código. Estos operadores permiten comparar valores y establecer reglas condicionales, lo que resulta esencial para tareas como el filtrado de datos, la selección de subconjuntos y la implementación de estructuras de control. Los operadores lógicos trabajan con valores booleanos, es decir, **TRUE** o **FALSE**, y su correcta utilización facilita la construcción de análisis estadísticos robustos y flexibles (R Core Team, 2023).

A continuación, se presenta una tabla que resume los principales operadores lógicos en R, junto con su función, un ejemplo de uso y el resultado esperado:

| **Operador** | **Acción**        | **Ejemplo**          | **Resultado** |
|--------------|-------------------|----------------------|---------------|
| `>`          | Mayor que         | `5 > 3`              | `TRUE`        |
| `<`          | Menor que         | `5 < 3`              | `FALSE`       |
| `>=`         | Mayor o igual que | `5 >= 5`             | `TRUE`        |
| `<=`         | Menor o igual que | `5 <= 4`             | `FALSE`       |
| `==`         | Igualdad          | `5 == 5`             | `TRUE`        |
| `!=`         | Desigualdad       | `5 != 3`             | `TRUE`        |
| `&`          | Y lógico (AND)    | `(5 > 3) & (4 > 2)`  | `TRUE`        |
| `|`          | O lógico (OR)     | `(4 < 2)  | (5 > 3)` | `TRUE`        |
| `!`          | Negación lógica   | `!(5 > 3)`           | `FALSE`       |

### Ejemplo práctico

A continuación, se muestra un ejemplo práctico, donde se emplean operadores lógicos para realizar comparaciones y evaluaciones condicionales:

```{r}
# Comparaciones simples
edad <- 25
es_mayor <- edad > 18          # TRUE, porque 25 es mayor que 18
es_menor <- edad < 30          # TRUE, porque 25 es menor que 30
es_igual <- edad == 25         # TRUE, porque 25 es igual a 25
es_diferente <- edad != 20     # TRUE, porque 25 es diferente de 20

# Operaciones lógicas compuestas
peso_Kg <- 70
altura <- 1.75
imc <- peso_Kg / (altura^2)    # Cálculo del índice de masa corporal

sobrepeso <- imc >= 25 & imc < 30      
sobrepeso   # FALSE, el IMC está fuera del rango de sobrepeso
peso_normal <- imc >= 18.5 & imc < 25  
peso_normal # TRUE, el IMC está en el rango de peso normal
```

En este ejemplo, se observa cómo los operadores lógicos permiten evaluar condiciones tanto simples como compuestas, facilitando la clasificación de datos y la toma de decisiones dentro del análisis estadístico en R (R Core Team, 2023).

## Operadores de Manipulación de Datos

En R, los operadores de manipulación de datos cumplen una función central en el acceso, selección y modificación de elementos dentro de estructuras como vectores, listas y data frames. El dominio de estos operadores resulta indispensable para trabajar con datos organizados y ejecutar análisis estadísticos de manera eficiente, ya que permiten extraer, transformar y analizar información específica de grandes conjuntos de datos (R Core Team, 2023).

La siguiente tabla resume los principales operadores de manipulación de datos en R, su función, un ejemplo de uso y el resultado esperado:

| **Operador** | **Acción** | **Ejemplo** | **Resultado** |
|----|----|----|----|
| `[]` | Acceso a elementos por posición | `vector[1]` | Primer elemento del vector |
| `[ , ]` | Acceso a filas y columnas en un data frame | `data[1, 2]` | Elemento en la fila 1, columna 2 |
| `$` | Acceso a una columna específica en un data frame | `data$columna` | Columna seleccionada |
| `:` | Creación de secuencias | `1:10` | Secuencia del 1 al 10 |

A continuación, se presenta un ejemplo práctico utilizando fragmentos de código en R para ilustrar el uso de estos operadores:

```{r}
# Crear un vector
vector <- c(10, 20, 30, 40, 50)

# Acceder al primer elemento
vector[1]       # Resultado: 10
# Crear un data frame para el ejemplo
data <- data.frame(
  nombre = c("Juan", "Ana", "Luis"),
  edad = c(25, 30, 22),
  peso = c(70, 65, 80)
)

# Acceder a una columna
data$edad      # Resultado: 25, 30, 22

# Acceder a un elemento específico
data[2, 3]       # Resultado: 65 (peso de Ana)

# Crear una secuencia de números del 1 al 10
secuencia <- 1:10   # Resultado: 1, 2, 3, ..., 10               
secuencia
```

Este ejemplo muestra cómo los operadores de manipulación de datos permiten seleccionar elementos individuales, columnas completas o secuencias de valores dentro de las estructuras de datos más utilizadas en R. Estas operaciones son fundamentales para filtrar, transformar y analizar información de manera precisa y eficiente en el entorno estadístico (R Core Team, 2023).
