[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introducción al entorno de programacón R y su aplicacion en el análisis estadístico de datos",
    "section": "",
    "text": "Introducción\nLa ciencia de datos, con un enfoque estadístico, permite transformar datos en bruto en información comprensible y útil para la toma de decisiones. Este manual está diseñado para principiantes y busca introducir las herramientas fundamentales de R, un lenguaje ampliamente utilizado en el análisis estadístico y la ciencia de datos. A lo largo del texto, se abordan conceptos básicos y se presentan ejemplos prácticos que facilitan la comprensión de técnicas estadísticas esenciales. El objetivo es proporcionar una base sólida que permita aplicar R de manera efectiva en el análisis de datos, incluso sin experiencia previa.",
    "crumbs": [
      "Introducción"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "1  Conceptos básicos de R",
    "section": "",
    "text": "1.1 ¿Qué es R?\nR es un lenguaje de programación y entorno computacional especializado en análisis estadístico y visualización científica, diseñado para investigación reproducible (Ihaka & Gentleman, 1996).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "12  Material de apoyo y referencias",
    "section": "",
    "text": "12.1 Material de apoyo",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Material de apoyo y referencias</span>"
    ]
  },
  {
    "objectID": "teoria.html",
    "href": "teoria.html",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "",
    "text": "1.1 ¿Qué es R?\nR es un lenguaje de programación y entorno computacional especializado en análisis estadístico y visualización científica, diseñado para investigación reproducible (Ihaka & Gentleman, 1996).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#qué-es-r",
    "href": "teoria.html#qué-es-r",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "",
    "text": "1.1.1 ¿Qué hace tan especial a R para el análisis estadístico?\n\nCódigo Abierto: Sin costos de licencia, ideal para proyectos académicos (R Core Team, 2023).\nExtensible: Hasta 2023 existen más de 19,000 paquetes disponibles en CRAN (Comprehensive R Archive Network) especializados en añadirle nuevas funciones para resolver necesidades especificas usando R, la funcionalidad de estos paquetes va desde hacer mejores gráficos de una manera sencilla hasta facilita procesos estadísticos (CRAN, 2023).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#qué-es-rstudio",
    "href": "teoria.html#qué-es-rstudio",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.2 ¿Qué es RStudio?",
    "text": "1.2 ¿Qué es RStudio?\nRStudio es un Entorno de Desarrollo Integrado (IDE) que optimiza el flujo de trabajo en R, destacándose por su sistema de proyectos y herramientas para reproducibilidad (Allaire et al., 2022).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#reproducibilidad-replicabilidad-qué-tienen-que-ver-con-r-y-rstudio",
    "href": "teoria.html#reproducibilidad-replicabilidad-qué-tienen-que-ver-con-r-y-rstudio",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.3 Reproducibilidad, Replicabilidad ¿Qué tienen que ver con R y RStudio?",
    "text": "1.3 Reproducibilidad, Replicabilidad ¿Qué tienen que ver con R y RStudio?\nEl 64% de los investigadores enfrentan dificultades para replicar estudios previos debido a documentación insuficiente (Baker, 2016).\n\nSituación: Usas Excel y/o infostat. Tus cálculos están en celdas ocultas, y los gráficos se ajustan manualmente.\nResultado: Nadie, ni tú en 6 meses, podrá repetir exactamente tu análisis.\nSolución: Realizar el análisis de los datos y la construcción de los gráficos aprovechando las herramientas que nos provee R para generar un script donde se documenta el paso a paso que se siguió para realizar el análisis y llegar a las conclusiones.\n\n\n\n\n“Un script de R es como una receta: cualquiera puede seguirla paso a paso para recrear tu ‘platillo’ científico. Así como, cualquiera puede re interpretarla para crear su propio ‘platillo’ científico.”\n\n\n\n1.3.1 Definición formal de reproducibilidad y replicabilidad\nLa reproducibilidad (capacidad de obtener los mismos resultados con los mismos datos y métodos) y la replicabilidad (consistencia de hallazgos en nuevos contextos) son fundamentales para la credibilidad científica (National Academies of Sciences, Engineering, and Medicine, 2019).\n\n\n1.3.2 Beneficios de la adopción de R para la Ciencia\n\nTransparencia: Código accesible para revisión por pares (The Turing Way Community, 2023).\nEficiencia: Reutilización de métodos en nuevos estudios (Gentleman & Temple Lang, 2007).\nCredibilidad: Cumplimiento de estándares FAIR (Wilkinson et al., 2016).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#cómo-obtengo-r-y-rstudio-para-mi-uso-personal",
    "href": "teoria.html#cómo-obtengo-r-y-rstudio-para-mi-uso-personal",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.4 ¿Cómo obtengo R y RStudio para mi uso personal?",
    "text": "1.4 ¿Cómo obtengo R y RStudio para mi uso personal?\nInstalar R y RStudio en nuestro ordenador es bastante sencillo. Para ello primero debemos descargar una versión de R estable, en el momento de elaboración de este material la ultima versión de R es R 4.4.2, sin embargo, utilizar la ultima versión de R nos puede llegar a dar problemas al utilizar paquetes los cuales no han recibido actualizaciones para poderse utilizar en esa versión de R es por ello que se recomienda instalar la ultima versión estable conocida de R. Con base a lo anteriormente explicado en este curso utilizaremos la versión de R 4.3.1.\nEl enlace para ir al repositorio donde se encuentran todas la versiones de R es el siguiente: https://cran.r-project.org/bin/windows/base/old/. En esta página encontraremos un directorio con todas las versiones de R que alguna vez han existido para descargar una versión en específico, le damos clic al nombre de la versión y nos abrirá un directorio con toda la documentación de esa versión de R, a nosotros nos interesa el archivo con una terminación -win. exe la cual al darle clic automáticamente nos descargara el instalador de la versión de R.\nPara descargar la ultima versión de RStudio nos dirigimos a la Página oficial de RStudio donde al dar clic sobre el botón “Download RStudio Desknop for Windows” la pagina iniciara la descarga del instalador de RStudio. En caso de que nuestro dispositivo no tenga como sistema operativo Windows en la misma pagina en la sección siguiente se encuentran las respectivas versiones de RStudio para todos los sistemas operativos con los que es compatible.\nLa instalación de los dos programas debe realizarse en un orden específico para evitar conflictos y errores. Primero debemos instalar la versión de R y posteriormente instalamos RStudio. Cabe resaltar que en un mismo dispositivo pueden convivir más de una versión de R y dentro de la configuración de RStudio es posible seleccionar cuál versión sera con la que trabajaremos.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#trabajo-práctico-para-familiarizarnos-con-el-software",
    "href": "teoria.html#trabajo-práctico-para-familiarizarnos-con-el-software",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.5 Trabajo práctico para familiarizarnos con el software",
    "text": "1.5 Trabajo práctico para familiarizarnos con el software\nAprender desde cero a usar un software como R y RStudio. Es como cuando nos iniciamos en la cocina: por más que leamos recetas, solo dominaremos los sabores y técnicas al encender la estufa y experimentar. Según la teoría del aprendizaje experimental de Kolb (1984), internalizamos conceptos cuando hacemos, no solo cuando escuchamos. Imaginemos que preparamos una salsa: si la sal es excesiva (error), ajustamos la próxima vez (prueba), y así hasta lograr el equilibrio (éxito). De la misma forma, al programar en RStudio, cada línea de código es nuestro ingrediente. Si un gráfico no se renderiza, depuramos el error; si un cálculo falla, corregimos la sintaxis. Este ciclo de prueba-error, respaldado por el constructivismo (Hmelo-Silver et al., 2007), transforma funciones abstractas en habilidades concretas. No memorizamos funciones: los saboreamos en la práctica, como los chefs que aprenden a medir ‘a ojo’ la pimienta. La pantalla es nuestra cocina, y cada script, un plato que perfeccionamos.\n\n\n\n\n\n\n1.5.1 Empecemos creando un nuevo script de R\nCuando abrimos por primera vez RStudio nos encontramos con la siguiente interfaz:\n\n\n\n\n\nNormalmente nos toca crear un script nuevo para trabajar cuando entramos para ello existen dos rutas habituales y estas son:\n\nManualmente: Desplegamos la pestaña “File” de la cinta de opciones ubicada en la parte superior izquierda del programa, sucesivamente seleccionamos la opción “New File” y después seleccionamos el tipo de archivo que para nuestro caso es “R Script”.\n\n\n\n\n\n\n\nUtilizando atajos de teclado: Para crear un nuevo script se puede utilizar la combinación de teclas Ctrl+Shift+N como un atajo de teclado, el cual nos creara automáticamente un script nuevo.\n\n\n\n1.5.2 Guardemos nuestro script para evitar perder nuestro trabajo\nUna vez ya hemos creado el script en donde trabajaremos este es un lienzo en blanco en donde desarrollaremos el análisis de nuestros datos, para evitar perder nuestro progreso por cualquier inconveniente es recomendable guardarlo desde el principio. Para ello nuevamente desplegamos la pestaña “File” y seleccionamos la opción “Save as…” esta opción nos abrirá el menú predeterminado para seleccionar dónde guardar nuestro script y con qué nombre.\n\n\n\n\n\n\n1.5.2.1 Recomendaciones para la organización de archivos\nAsí como en la cocina separamos los utensilios, los ingredientes frescos y las especias en cajones etiquetados, en RStudio necesitamos un sistema claro para guardar nuestros scripts, datos y resultados. Un proyecto desorganizado es como una alacena caótica: perderemos tiempo buscando archivos y arriesgaremos errores. Para evitarlo, sigamos estas recomendaciones de organización:\n\nNombres descriptivos y consistentes:\n\n❌ analisis1.R, datos_finales.xlsx\n✅ 20231015_analisis_rendimiento_maiz.R, datos_suelo_antigua_2023.csv\n\nEvitar espacios y caracteres especiales:\n\nUsar guiones bajos (_) o medios (-) en vez de espacios:\n\n❌ analisis suelo.R\n✅ analisis_suelo.R\n\n\nIncluir fechas en un formato estandarizado (YYYY-MM-DD):\n\n2023-10-15_importacion_datos.R\n\nCrear una carpeta en nuestro ordenador para cada proyecto\n\nCon este sistema, cualquier colaborador (o nuestro “yo” del futuro) encontrará todo al primer vistazo, como un chef que sabe dónde está cada ingrediente en su cocina. La organización no es burocracia: es la base de la eficiencia y la reproducibilidad.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#iniciemos-conociendo-los-objetos-en-r",
    "href": "teoria.html#iniciemos-conociendo-los-objetos-en-r",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.6 Iniciemos conociendo los objetos en R",
    "text": "1.6 Iniciemos conociendo los objetos en R\nEn R, todo es un objeto. Un objeto es una estructura que almacena datos y tiene atributos (nombre, tipo, etc.).\n\n1.6.1 Recomendaciones para nombrar objetos:\n\nSensibles a mayúsculas: pH ≠ ph.\nNo usar espacios:\n\n❌ rendimiento ha\n✅ rendimiento_ha\n\nNombres descriptivos y consistentes:\n\nA diferencia de cuando nombramos archivos acá es recomendable que el nombre sea breve pero que al mismo tiempo nos brinde la mayor cantidad de información posible. Cuando esto no es viable por la especificidad de los datos o cualquier otra razón podemos guardar un archivo con la metadata de nuestra base de datos en la misma carpeta como parte de la documentación que facilitara la comprensión del análisis a cualquier colaborador (o nuestro “yo” del futuro).\n\n\n\n\n1.6.2 ¿Cómo creo un objeto?\nPara la creación de cualquier objeto en R existen dos operadores de asignación los cuales son: “=” y “&lt;-” estos operadores cumplen la misma función. Sin embargo, el signo de igualdad no se recomienda utilizarlo debido a que puede llegar a causar conflictos al usar operadores lógicos en nuestro codigo es por ello que para fines profesionales se ha estandarizado el uso de “&lt;-” como operador de asignación en R.\nLa estructura de sintaxis utilizada en R para crear cualquier objeto es la siguiente:\n\n\n\n\n\n\n\n\nNOMRE DEL OBJETO\n&lt;-\nInformación que contendrá nuestro objeto\n\n\nSiguiendo las recomendaciones para su nomenclatura\nVector de asignación\nLos objetos en R pueden contener distintos tipos de información ya sea texto, números…\n\n\n\nNota: Para visualizar en la consola el valor de un objeto se escribe el nombre asignado y se ejecuta la linea de código.\n\n\n1.6.3 Tipos de objetos\nEn R, cada objeto puede almacenar distintos tipos de datos. Sin embargo, solo pueden almacenar un tipo de dato en cada objeto. Los tipos de objetos existentes en R son:\n\n1.6.3.1 Objetos numéricos\nUn objeto numérico es aquel que almacena datos con números enteros o decimales, estos nos sirven para almacenar información de variables cuantitativas como por ejemplo: Edad, Altura, Peso. También nos puede servir para guardar factores de conversión para convertir entre distintas unidades de medida por ejemplo el factor de conversión entre libras y kilogramos es 2.2. A continuación vamos a poner en práctica la creación de este tipo de objetos creando el objeto correspondiente a cada uno de los ejemplos dados utilizando nuestra información:\n\n# EJEMPLO DE CREACIÓN DE OBJETOS NUMÉRICOS\nedad &lt;- 21\naltura_m &lt;- 1.70\npeso_lb &lt;- 150\nlb_kg &lt;- 2.20\n\nPara ejecutar el código que acabamos de escribir existen dos maneras las cuales son:\n\nManualmente: Nos ubicamos en la linea de código que queremos ejecutar y damos clic sobre la opción “Run” que se encuentra en la esquina superior derecha del área del script.\nUsando atajos de teclado: Seleccionamos la/las lineas de código que queremos ejecutar y presionamos la combinación de teclas Ctrl+Enter.\n\nIndistintamente de cuál de los métodos utilicemos veremos como en la consola aparecerán las lineas de código que hayamos ejecutado y al mismo tiempo en el Environment (Ambiente) nos aparecerán los nombres de nuestros objetos creados y su contenido.\nNota: En R si antes de un texto colocamos el símbolo numeral (#) el software lo interpreta como un comentario, estas lineas no se ejecutaran. Sin embargo, son muy útiles para explicar ¿Qué hicimos? en cada sección de nuestro código, para que sea más fácil de entender para nuestro “yo” del futuro.\n\n\n1.6.3.2 Objetos tipo carácter o texto\nLos objetos de tipo carácter nos sirven para almacenar variables cualitativas, este tipo de objeto almacena el texto entre comillas (” “), habitualmente se utiliza para almacenar nombres y categorías no estructuradas como por ejemplo: nuestro color favorito o el nombre de nuestra comida favorita. A continuación vamos a poner en práctica la creación de este tipo de objetos creando el objeto correspondiente a cada uno de los ejemplos dados:\n\n# EJEMPLO DE CREACIÓN DE OBJETOS TIPO CARACTER \ncolor_fav &lt;- \"negro\"\ncomida_fav &lt;- \"pizza\"\n\n\n\n1.6.3.3 Objetos de tipo factor\nLos objetos de tipo factor nos sirven para almacenar variables categóricas estructuradas con niveles definidos. Usualmente se utiliza para almacenar escalas o categorías definidas como por ejemplo: una escala de calificaciones (aprobado o reprobado) o el estado civil de una persona (casado, soltero o divorciado). Para crear este tipo de objetos utilizamos la función “factor()” para indicarle a R que este objeto no es de tipo carácter ya que al igual que los objetos tipo carácter los niveles de nuestras categorías se ingresan entre comias. A continuación vamos a poner en práctica la creación de este tipo de objetos creando el objeto de tipo factor estado civil y sexo con nuestra información.\n\n# EJEMPLO DE CREACIÓN DE OBJETOS TIPO FACTOR \nestado_civil &lt;- factor(\"soltero\")\nsexo &lt;- factor(\"masculino\")\n\nNota: Los objetos de tipo factor son muy útiles cuando trabajamos con bases de datos complejas ya que estos nos sirven para clasificar y categorizar variables para su análisis\n\n\n1.6.3.4 Objetos lógicos\nLos objetos de tipo lógico también conocidos como los termómetros de condiciones nos sirven para aplicar filtros y se crean normalmente como el resultado de una comparación en donde estuvo involucrado un operador lógico (en la siguiente sección hablaremos de los distintos tipos de operadores que existen en R). Su nombre de termómetros de condiciones es más acertado con los ejemplos tipicos de su uso. Para el caso de nuestros objetos anteriormente creados podemos crear un objeto de tipo lógico comparando si nuestra edad cumple con la condición necesaria para ser considerados mayores de edad que para el caso de Guatemala esta condición seria que nuestra edad sea mayor a 18 años. A continuación vamos a poner en práctica la creación de este tipo de objetos creando el objeto del ejemplo antes descrito.\n\n# EJEMPLO DE CREACIÓN DE UN OBJETO TIPO LOGICO\nmayoria_de_edad &lt;- edad &gt;18 ; mayoria_de_edad\n\n[1] TRUE\n\n\nNota: si al acabar la asignación de un objeto colocamos un punto y coma seguido del nombre del objeto R nos devolverá en la consola el valor del objeto esto es útil cuando el objeto es el resultado de una operación. Para el ejemplo anterior podemos ver como en la consola nos aparece el valor de nuestro objeto que para este caso al cumplirse la condición el valor es TRUE (verdadero).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#y-si-quiero-un-objeto-con-dos-o-más-valores",
    "href": "teoria.html#y-si-quiero-un-objeto-con-dos-o-más-valores",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.7 ¿Y si, quiero un objeto con dos o más valores?",
    "text": "1.7 ¿Y si, quiero un objeto con dos o más valores?\nImaginemos que estamos organizando la información de un salón de clase: no trabajamos con un solo alumno, sino con un grupo de estudiantes, cada uno con información diferente como nombre, edad, peso en libras y sexo. En R, los vectores y data frames son nuestras herramientas para manejar colecciones de datos de manera estructurada y eficiente. A continuación, exploraremos cómo crear y gestionar estos objetos.\nUn vector en R es un objeto el cual esta compuesto por un número determinado de elementos del mismo tipo para su creación en R se utiliza la función “c()” y dentro de los paréntesis se colocan todos los elementos que formaran parte de nuestro vector separados por comas. A continuación elaboraremos un ejemplo de como crear un vector para cada uno de los distintos tipos de objetos que hay en R utilizando datos de un salón de clases.\n\n# EJEMPLO DE CREACIÓN DE VECTORES \n# VECTORES DE TIPO CARACTER\nnombre &lt;- c(\"Juan\", \"Pedro\", \"Luis\", \"Ana\", \"Andrea\")\n\n# VECTORES DE TIPO NUMÉRICO\nedad &lt;- c(18, 17, 21, 20, 19) \npeso_lb &lt;- c(125.20, 130.5, 145.6, 120.1, 110.5)\n\n# VECTORES DE TIPO CATEGORICO\nsexo &lt;- factor(c(\"H\", \"H\", \"H\", \"M\", \"M\"))\n\n# VECTORES DE TIPO LOGICO\nmayoria_de_edad &lt;- edad &gt;=18\n\n\n1.7.1 Tengo muchos vectores… ¿Cómo los puedo agrupar para tener una mejor organización?\nCuando trabajamos con múltiples vectores relacionados (por ejemplo, datos de estudiantes en un salón de clase), la mejor manera de organizarlos es utilizando estructuras de datos integradas en R que permiten agrupar vectores de manera coherente. Las dos opciones principales son los data frames y las listas. A continuación, exploraremos cómo usarlas:\n\n\n1.7.2 Data Frames: Tablas estructuradas para análisis\nUn data frame es una estructura tabular (similar a una hoja de Excel) que combina vectores de igual longitud pero de distintos tipos (numéricos, caracteres, factores, etc.). Es ideal para bases de datos organizadas, donde cada fila representa una observación y cada columna una variable.\n\n1.7.2.1 Creemos un data frame con nuestros vectores\nPara la creación de un data frame se emplea la función data.frame(), los argumentos que se colocan en esta función son los nombres de todos los vectores que queremos unir en un mismo data frame separados por comas, como se muestra a continuación:\n\n# EJEMPLO DE CREACIÓN DE UN DATAFRAME\ndatos_estudiantes &lt;- data.frame(nombre, edad, mayoria_de_edad, peso_lb, sexo)\ndatos_estudiantes\n\n  nombre edad mayoria_de_edad peso_lb sexo\n1   Juan   18            TRUE   125.2    H\n2  Pedro   17           FALSE   130.5    H\n3   Luis   21            TRUE   145.6    H\n4    Ana   20            TRUE   120.1    M\n5 Andrea   19            TRUE   110.5    M\n\n\n\n\n1.7.2.2 Ventajas de los data frames\n\nPermiten manipulación y análisis estadístico directo.\nCompatibles con funciones de visualización.\nFáciles de exportar/importar.\n\n\n\n\n1.7.3 Listas: Colecciones flexibles de objetos\nUna lista es una estructura que puede contener cualquier tipo de objeto (vectores, matrices, otros data frames, funciones, etc.), incluso si tienen longitudes o tipos diferentes. Son útiles para organizar resultados complejos o grupos heterogéneos de datos.\nMás adelante cuando queramos guardar los resultados de nuestros analisis estadisticos aprenderemos más sobre las listas. Por el momento solo trabajaremos con data frames.\n\n1.7.3.1 Comparación entre data frames y listas\n\n\n\n\n\n\n\nData Frame\nLista\n\n\n\n\nVectores de igual longitud.\nObjetos de cualquier tipo o longitud.\n\n\nIdeal para análisis estadístico.\nIdeal para almacenar resultados mixtos.\n\n\nColumnas con nombres definidos.\nElementos pueden nombrarse o no.\n\n\n\n\n\n\n1.7.4 ¿Qué pasa si mis datos ya los tengo almacenados en un archivo de delimitado por comas (CSV) o excel?\nImaginemos que los datos son ingredientes guardados en recipientes: los archivos CSV y Excel son como frascos etiquetados que R puede abrir para extraer información. Para ello tenemos que importarlos así, evitando el tedioso copiar/pegar manual, y mantener la reproducibilidad de nuestro análisis.\n\n1.7.4.1 Archivos delimitados por comas (.csv)\n\nEstructura: Archivo de texto plano donde cada valor está separado por una coma (ej: nombre, edad, altura, peso).\nCaracterísticas técnicas:\n\nSin formato: No admite colores, fórmulas o múltiples hojas.\nUniversal: Lo abre cualquier editor de texto o programa (Bloc de notas, Excel, R).\nLigero: Ideal para datos simples y transferencias rápidas.\n\nEjemplo de cómo importar un archivo .csv a R\n\nPara importar un data frame que se encuentra almacenado en formato .csv a R se emplea la siguiente sintaxis para la función: “read.csv(”nombre del documento”, header = (indicar si tiene o no encabezado), sep =”(indicar que tipo de separador utilizamos)”)”\n\nInstalar los paquetes necesarios para esta tarea\n\n#1 INSTALAMOS LOS PAQUETES DE R NECESARIOS PARA ESTA TAREA\nif (!require(\"rstudioapi\")) install.packages(\"rstudioapi\") \n# Lo usaremos para establecer nuestro directorio de trabajo facilmente\n\nEstablecemos la carpeta de nuestro proyecto como directorio de trabajo\n\n#2 ESTABLECER NUESTRO DIRECTORIO DE TRABAJO\nsetwd (dirname(rstudioapi::getActiveDocumentContext()$path)) \n\nImportamos nuestro dataframe\n\n#3 IMPORTAMOS NUESTRO DATAFRAME\ndatos&lt;-read.csv(\"datos_estudiantes_2002.csv\", \n                header = TRUE, \n                sep = \";\")\n\n\nNota: La siguiente linea de código “setwd (dirname(rstudioapi::getActiveDocumentContext()$path))” es una”receta mágica” que establece automáticamente la misma carpeta donde tenemos guardado nuestro script como nuestro directorio de trabajo.\n\n\n1.7.4.2 Archivos de excel (.xlsx)\n\nEstructura: Archivo binario con múltiples hojas, fórmulas, gráficos y formato (ej: colores, fuentes).\nCaracterísticas técnicas:\n\nComplejo: Diseñado para análisis interactivos y presentaciones.\nPropietario: Desarrollado por Microsoft, pero compatible con herramientas como R.\nPesado: Puede ralentizarse con grandes volúmenes de datos (&gt;1 millón de filas).\n\nEjemplo de cómo importar un archivo .xlsx a R\n\nPara importar un data frame que se encuentra almacenado en formato .xlsx a R se emplea la siguiente sintaxis para la función: “read_excel(”nombre del documento”, col_names = (indicar si tiene o no encabezado), sheet =”nombre de la hoja”)”\n\nInstalar los paquetes necesarios para esta tarea\n\n#1 INSTALAMOS LOS PAQUETES DE R NECESARIOS PARA ESTA TAREA\nif (!require(\"rstudioapi\")) install.packages(\"rstudioapi\") # Lo usaremos para \n#establecer nuestro directorio de trabajo facilmente\nif (!require(\"readxl\")) install.packages((\"readxl\")) # Este paquete nos sirve \n#para que R pueda importar archivos de excel\n\nEstablecemos la carpeta de nuestro proyecto como directorio de trabajo\n\n#2 ESTABLECER NUESTRO DIRECTORIO DE TRABAJO\nsetwd (dirname(rstudioapi::getActiveDocumentContext()$path)) \n\nImportamos nuestro dataframe\n\n#3 IMPORTAMOS NUESTRO DATAFRAME\ndatos_2002 &lt;- read_excel(\"datos_estudiantes_2002.xlsx\", \n                  col_names = TRUE, \n                  sheet = \"datos\")\n\n\n\n\n\n1.7.5 ¿Cómo acceder a las variables de un Data frame?\nPara acceder a la información guardada como una columna en un data frame, no podemos acceder de la misma manera que lo hacíamos con los vectores para esta tarea accedemos usando el operador $: La “Llave Maestra”. Este operador accede directamente a una columna/variable del data frame por su nombre. Para esto usamos la sintaxis siguiente: (nombre del data frame)$(nombre de la columna)\nEjemplo :\n\n# Acceder a la columna \"edad\" del data frame datos_estudiantes\ndatos_estudiantes$edad      \n\n[1] 18 17 21 20 19\n\n\nUso común:\n\nIdeal para operaciones rápidas o cuando trabajas con pocas variables.\nFunciona con cualquier funcion u operador con el que estemos trabajando.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#la-importancia-de-un-directorio-de-trabajo",
    "href": "teoria.html#la-importancia-de-un-directorio-de-trabajo",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.8 La importancia de un directorio de trabajo",
    "text": "1.8 La importancia de un directorio de trabajo\nImagina que el directorio de trabajo es como el “punto de partida” en un mapa: es la carpeta donde R buscará automáticamente tus archivos (datos, scripts) y guardará tus resultados. Si no lo defines, es como intentar cocinar sin saber dónde están los ingredientes: perderás tiempo buscando rutas manualmente y el código dejará de funcionar si mueves el proyecto a otra computadora.\n\n1.8.1 ¿Por qué establecer un directorio de trabajo?\n\nReproducibilidad: Garantiza que tu código funcione en cualquier computadora, sin depender de rutas como C:/Usuario/MiPC....\nOrganización: Evita errores del tipo “archivo no encontrado” al mantener todo (datos, scripts, resultados) en una estructura clara.\nEficiencia: Simplifica el acceso a archivos. En vez de escribir rutas completas, usas nombres simples.\n\n\n\n1.8.2 La “Receta Mágica”\n\nsetwd(dirname(rstudioapi::getActiveDocumentContext()$path))\n\n\n1.8.2.1 ¿Qué hace esta línea?\n\nrstudioapi::getActiveDocumentContext()$path: Obtiene la ruta del script actual (ej: C:/proyecto/scripts/analisis.R).\ndirname(): Extrae la carpeta padre de esa ruta (ej: C:/proyecto/scripts/ → C:/proyecto/).\nsetwd(): Establece esa carpeta como directorio de trabajo.\n\n\n\n\n1.8.3 Beneficios clave\n\nPortabilidad: Si mueves toda la carpeta del proyecto a otra ubicación, el código sigue funcionando.\nAutomatización: No necesitas ajustar manualmente rutas al compartir el proyecto.\n\n\n\n1.8.4 ¿Qué pasa si no se establece?\n\nErrores constantes: R buscará archivos en una ubicación predeterminada (ej: Documentos), no donde están tus datos.\nCódigo no reproducible: Si alguien más ejecuta tu script, tendrá que modificar manualmente todas las rutas.\n\n📌 Consejo: Ejecuta getwd() para verificar tu directorio actual. Si usas la línea automática, ¡asegúrate de guardar el script antes de ejecutarla!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#operadores-en-r-es-r-otra-calculadora-pero-más-difícil-de-utilizar",
    "href": "teoria.html#operadores-en-r-es-r-otra-calculadora-pero-más-difícil-de-utilizar",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.9 Operadores en R ¿Es R otra calculadora pero más difícil de utilizar?",
    "text": "1.9 Operadores en R ¿Es R otra calculadora pero más difícil de utilizar?\n\n\n\n\n\nImaginemos que R es un taller de herramientas completo: no solo tiene destornilladores y martillos (operadores básicos), sino también taladros, niveles láser y equipos de soldadura (funciones avanzadas, paquetes y estructuras de datos). Cada herramienta tiene un propósito único, y combinarlas permite construir soluciones robustas. A continuación, exploraremos cómo estas “herramientas” se integran en un flujo de trabajo profesional.\n\n1.9.1 Operadores básicos: Los “Destornilladores” de R\nDefinición: Realizan operaciones matemáticas o lógicas sencillas, similares a una calculadora, pero con potencial escalable.\n\n1.9.1.1 Operadores aritméticos\n\n\n\nOperador\nAcción\n\n\n\n\n+\nSuma\n\n\n-\nResta\n\n\n*\nMultiplicación\n\n\n/\nDivisión\n\n\n^\nPotencia\n\n\n\n\n\n1.9.1.2 Operadores lógicos\n\n\n\nOperador\nAcción\n\n\n\n\n&gt;\nMayor que\n\n\n&lt;\nMenor que\n\n\n==\nIgualdad\n\n\n!=\nDesigualdad\n\n\n\nRespondiendo nuestra pregunta inicial\nSí, R puede sumar y restar como una calculadora, pero su verdadero poder está en integrar operadores con funciones, visualizaciones y estructuras de datos para resolver problemas complejos. Como un carpintero que transforma madera en muebles, R transforma datos en conocimiento.\n\n\n\n1.9.2 Experimentemos usar operadores en R\nA partir de acá, para nuestro ejercicio de aplicación, vamos a utilizar el data frame que importamos de excel, este objeto lo identificamos con el nombre “datos_2002”, esta base de datos incluye 11 variables obtenidas de una encuesta realizada a estudiantes de la universidad de San Carlos de Guatemala en el año 2002, como ejercicio de aplicación vamos a crear nuevas variables a partir de las variables ya existentes. Las nuevas variables que vamos a crear serán: Peso_Kg, IMC, Mayoría_edad (variable lógica).\nSolución del ejercicio:\n\nPeso_Kg &lt;- datos_2002$PESO_lbs / lb_kg\nIMC &lt;- Peso_Kg / (datos_2002$TALLA)^2\nMayoria_edad &lt;- datos_2002$EDAD &gt;= \"18\"",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#paquetes-de-r-recursos-compartidos-por-la-comunidad-para-mejorar-nuestros-análisis-estadísticos",
    "href": "teoria.html#paquetes-de-r-recursos-compartidos-por-la-comunidad-para-mejorar-nuestros-análisis-estadísticos",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.10 Paquetes de R: Recursos Compartidos por la Comunidad para mejorar nuestros análisis estadísticos",
    "text": "1.10 Paquetes de R: Recursos Compartidos por la Comunidad para mejorar nuestros análisis estadísticos\nAsí como un chef no se limita a sal y pimienta, en R no te conformas con funciones básicas. Los paquetes son esos ingredientes secretos (ggplot2, dplyr, tidyr) que convierten un análisis simple en un banquete de insights.\n\n\n\n\n\n\n1.10.1 ¿Qué son los paquetes en R?\nDefinición: Los paquetes son colecciones de funciones, datos y documentación que amplían las capacidades básicas de R, como agregar especias a una receta. Son desarrollados por la comunidad y permiten resolver problemas específicos:\n\nEjemplo: ggplot2 (gráficos profesionales) y dplyr (manipulación de datos).\n\nMetáfora: “Si R es una cocina básica, los paquetes son licuadoras, batidoras y especias exóticas que transforman ingredientes crudos (datos) en platillos sofisticados (análisis).”\nOrígenes comunes:\n\nCRAN: El “supermercado oficial” de paquetes (más de 19,000 opciones).\nGitHub: La “tienda de ingredientes artesanales” para paquetes en desarrollo.\n\n\n\n1.10.2 ¿Cómo instalar paquetes en R?\nLa función utilizada en R para instalar paquetes desde CRAN (lo habitual) es install.packages() pero al instalar un paquete este no se carga automáticamente, debemos de cargarlo a nuestro entorno de trabajo para empezar a usarlo. Para esta tarea utilizamos la función library(). A continuación vamos a hacer este ejemplo con el paquete que utilizaremos para elaborar gráficos en la siguiente sección este se llama ggplot2.\n\ninstall.packages(\"ggplot2\")\nlibrary(\"ggplot2\")\n\nConsejo: Con fines de limpieza de nuestro código y facilitar su reproducibilidad es recomendable colocar al principio de nuestro script una sección dedicada a la instalación y carga de los paquetes que utilizamos en nuestro análisis.\n\n\n1.10.3 La “receta mágica” para instalar paquetes\nif (!require(\"nombre del paquete\")) install.packages(\"nombre del paquete\")\n\n1.10.3.1 ¿Qué hace esta linea?\n\nrequire(\"nombre del paquete\"): Esta función intenta cargar el paquete especificado. Si el paquete está instalado, lo carga en la sesión actual y devuelve TRUE. Si el paquete no está instalado, devuelve FALSE.\n!require(\"nombre del paquete\"): El signo de exclamación (!) niega el resultado de la función require(). Por lo tanto, esta expresión será TRUE si el paquete NO está instalado o NO puede ser cargado.\nif (...) install.packages(\"nombre del paquete\"): Esta es una estructura condicional. Si la condición entre paréntesis es TRUE (es decir, si el paquete no está instalado o no puede ser cargado), entonces se ejecuta install.packages(\"nombre del paquete\"), que descarga e instala el paquete desde el repositorio CRAN.\n\nEn resumen, esta línea de código:\n\nPrimero intenta cargar el paquete con require()\nSi el paquete está instalado, lo carga y continúa con el código\nSi el paquete NO está instalado, entonces lo instala automáticamente con install.packages() y luego lo carga.\n\nEsta es una técnica muy eficiente porque:\n\nEvita reinstalar paquetes que ya están disponibles.\nAsegura que el código funcione incluso si el usuario no tiene el paquete instalado.\nHace el código más portable entre diferentes computadora.\nAutomatiza la gestión de dependencias\n\nPara usar esta receta con un paquete específico, simplemente reemplazas “nombre del paquete” con el nombre real del paquete. Por ejemplo:\n\nif (!require(\"ggplot2\")) install.packages(\"ggplot2\")\n\nEsta línea intentará cargar ggplot2 y, si no está instalado, lo instalará automáticamente.\n\n\n\n1.10.4 ¿Cómo saber qué paquete usar para cada tarea?\nEn R, la elección del paquete adecuado para una tarea específica puede marcar la diferencia entre un análisis eficiente y uno complicado. Dado que R cuenta con más de 19,000 paquetes disponibles en CRAN, es importante conocer cuáles son los más utilizados y recomendados para cada tipo de tarea. A continuación, se presenta una guía práctica para identificar y seleccionar el paquete adecuado según las necesidades del análisis.\n\n1.10.4.1 Categorías principales de paquetes\nLos paquetes en R se pueden clasificar en diferentes categorías según su propósito. Aquí se presentan las más comunes y los paquetes más destacados en cada una:\n\nManipulación de datos:\n\nPaquetes como dplyr y tidyr son ideales para filtrar, transformar, agrupar y reorganizar datos.\nEjemplo: Calcular el promedio de edad por sexo o transformar datos de formato ancho a largo.\n\nVisualización de datos:\n\nggplot2 es el estándar para crear gráficos personalizados y de alta calidad.\nEjemplo: Crear gráficos de barras, histogramas o scatterplots para explorar relaciones entre variables.\n\nAnálisis estadístico básico:\n\nLas funciones base de R (stats) incluyen herramientas para realizar pruebas t, ANOVA y cálculos de medias.\nEjemplo: Comparar tratamientos de un experimento mediante un ANOVA.\n\nAnálisis estadístico avanzado:\n\nPaquetes como agricolae que es útil para diseños experimentales en agronomía.\nEjemplo: Analizar efectos aleatorios en un diseño de bloques completos al azar.\n\n\n\n\n1.10.4.2 Criterios para elegir un paquete\nAl seleccionar un paquete, es importante considerar los siguientes aspectos:\n\nPropósito: ¿Qué tarea específica necesitas realizar? Por ejemplo, si deseas manipular datos, dplyr es una excelente opción; si necesitas gráficos avanzados, ggplot2 es ideal.\nPopularidad y soporte: Los paquetes más populares suelen tener mejor documentación, tutoriales y una comunidad activa. Por ejemplo, ggplot2 y dplyr son ampliamente utilizados y cuentan con numerosos recursos en línea.\nCompatibilidad: Algunos paquetes están diseñados para integrarse con otros. Por ejemplo, dplyr y ggplot2 forman parte del ecosistema tidyverse, lo que facilita su uso conjunto.\nDocumentación: Un paquete bien documentado es más fácil de aprender y utilizar. Revisa la documentación oficial y los ejemplos proporcionados.\n\n\n\n1.10.4.3 Recursos para identificar paquetes\nSi no estás seguro de qué paquete usar, puedes recurrir a los siguientes recursos:\n\nCRAN Task Views: Una colección de listas temáticas en CRAN que agrupan paquetes según su propósito. Por ejemplo, la Task View de “Agriculture” incluye paquetes relacionados con análisis de suelos, cultivos y experimentos agrícolas.\n\nEnlace: CRAN Task Views\n\nCheatsheets: Las hojas de referencia rápida (cheatsheets) de RStudio son una excelente manera de explorar las capacidades de paquetes populares como ggplot2, dplyr y tidyr.\n\n-   Enlace: [Cheatsheets de RStudio](https://www.rstudio.com/resources/cheatsheets/)\n\nForos y comunidades: Plataformas como Stack Overflow, RStudio Community y GitHub son útiles para buscar recomendaciones y ejemplos de uso.\nLibros y tutoriales: Recursos como R for Data Science de Hadley Wickham y Garrett Grolemund ofrecen una introducción práctica a los paquetes más utilizados en el ecosistema tidyverse.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#manipulación-de-datos-con-dplyr-y-tidyr",
    "href": "teoria.html#manipulación-de-datos-con-dplyr-y-tidyr",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.11 Manipulación de datos con dplyr y tidyr",
    "text": "1.11 Manipulación de datos con dplyr y tidyr\nLa manipulación de datos es una tarea esencial en el análisis estadístico, ya que permite transformar, organizar y preparar los datos para su análisis. En R, los paquetes dplyr y tidyr del ecosistema tidyverse son herramientas clave para realizar estas tareas de manera eficiente y reproducible. A continuación, exploraremos las principales funciones de estos paquetes, el concepto de pipes y la utilidad de transformar datos entre formatos ancho y largo, con ejemplos prácticos, incluyendo aplicaciones en el ámbito agrícola.\n\n1.11.1 ¿Qué es dplyr?\ndplyr es un paquete diseñado para realizar operaciones comunes de manipulación de datos, como filtrar, seleccionar columnas, agrupar y resumir datos. Su sintaxis es intuitiva y está optimizada para trabajar con data frames y tibbles (una versión mejorada de los data frames).\n\n1.11.1.1 Operaciones básicas con dplyr\n\nFiltrar filas: Selecciona observaciones que cumplen una condición específica.\n\n# Filtrar estudiantes que miden más de 1.90m   \nestudiantes_altos &lt;- datos_2002 %&gt;% filter(TALLA &gt; 1.9)   \n\nSeleccionar columnas: Extrae variables específicas de un data frame.\n\n# Seleccionar solo las columnas de peso en libras y talla\nseleccion &lt;- datos_2002 %&gt;% select(PESO_lbs, TALLA)\n\n\n\n\nCrear nuevas columnas: Añade variables calculadas.\n\n# Crear una nueva columna con el pesoo en kilogramos   \ndatos_2002 &lt;- datos_2002 %&gt;% mutate(PESO_Kg = PESO_lbs / 2.2) \n\n\n\n\nAgrupar y resumir datos: Calcula estadísticas por grupo.\n\n# Calcular la edad promedio por facultad \npromedio_edad &lt;- datos %&gt;%     group_by(FACULTAD) %&gt;%     summarize(edad_promedio = mean(EDAD, na.rm = TRUE)) \n\n\n\n\n1.11.1.2 ¿Qué son las pipes (%&gt;%)?\nEl operador pipe (%&gt;%) es una herramienta clave en el tidyverse que permite encadenar funciones de manera legible y eficiente. En lugar de anidar funciones, el pipe pasa el resultado de una función como entrada a la siguiente.\n\n1.11.1.2.1 Ejemplo sin pipes:\n\npromedio &lt;- summarize(group_by(datos_2002, FACULTAD), edad_promedio = mean(EDAD, na.rm = TRUE))   \n\n\n\n1.11.1.2.2 Ejemplo con pipes:\n\n# Calcular la edad promedio por facultad \npromedio_pipe &lt;- datos_2002 %&gt;%     group_by(FACULTAD) %&gt;%     summarize(edad_promedio = mean(EDAD, na.rm = TRUE))   \n\nEl uso de pipes mejora la legibilidad del código, especialmente en flujos de trabajo complejos.\n\n\n\n\n1.11.2 Visualización de datos: Introducción a gráficos básicos con ggplot2\nLa visualización de datos es una herramienta fundamental para explorar patrones, comunicar resultados y validar supuestos en el análisis estadístico. En R, el paquete ggplot2 es ampliamente utilizado debido a su flexibilidad y capacidad para crear gráficos de alta calidad.\n\n1.11.2.1 ¿Qué es ggplot2?\nggplot2 es un paquete de R diseñado para crear gráficos personalizados y profesionales. Su enfoque se basa en una lógica de capas, donde cada capa representa un componente del gráfico (datos, tipo de gráfico, etiquetas, etc.). Esto permite construir gráficos complejos de manera modular y reproducible.\n\n\n1.11.2.2 Estructura básica de ggplot2\nLa estructura general de un gráfico en ggplot2 sigue esta sintaxis:\n\nggplot(data = DATOS, aes(x = VARIABLE_X, y = VARIABLE_Y)) +\n  GEOM_FUNCION() +     \n  labs(title = \"Título del gráfico\", \n       x = \"Etiqueta eje X\", \n       y = \"Etiqueta eje Y\")\n\n\ndata: El conjunto de datos que se usará para el gráfico.\naes(): Define las variables estéticas (ejes, colores, tamaños, etc.).\nGEOM_FUNCION(): Especifica el tipo de gráfico (e.g., barras, puntos, líneas).\nlabs(): Añade etiquetas y títulos.\n\n\n\n1.11.2.3 Ejemplo 1: Crear un histograma\nUn histograma es útil para explorar la distribución de una variable numérica.\n\n# Crear un histograma de la variable \"peso\"   \nggplot(data = datos_2002, aes(x = PESO_lbs)) +  \n  geom_histogram(binwidth = 5, fill = \"skyblue\", color = \"black\") +     \n  labs(title = \"Distribución del peso de los estudiantes\",\n       x = \"Peso (libras)\",\n       y = \"Frecuencia\")   \n\n\n\n\n\n\n\n\n\ngeom_histogram(): Crea el histograma.\nbinwidth: Define el ancho de las barras.\n\n\n\n1.11.2.4 Ejemplo 2: Crear un scatterplot\nUn scatterplot permite explorar la relación entre dos variables numéricas.\n\n# Relación entre peso y edad   \nggplot(data = datos_2002, aes(x = EDAD, y = PESO_lbs)) +\n  geom_point(color = \"blue\", size = 3) +     \n  labs(title = \"Relación entre edad y peso\",          \n       x = \"Edad (años)\",          \n       y = \"Peso (libras)\")   \n\n\n\n\n\n\n\n\n\ngeom_point(): Dibuja los puntos en el gráfico.\n\n\n\n1.11.2.5 Ejemplo 3: Crear un boxplot\nUn boxplot es útil para comparar la distribución de una variable numérica entre grupos.\n\n# Comparar el peso por sexo   \nggplot(data = datos_2002, aes(x = SEXO, y = PESO_lbs, fill = SEXO)) +\n  geom_boxplot() +     \n  labs(title = \"Distribución del peso por sexo\",\n       x = \"Sexo\",          \n       y = \"Peso (libras)\")   \n\n\n\n\n\n\n\n\n\nfill: Colorea las cajas según el grupo.\n\n\n\n\n1.11.3 Exportación de resultados: Guardar gráficos y tablas\nUna vez que se han generado gráficos o tablas, es importante exportarlos para su uso en informes o presentaciones. R ofrece funciones para guardar resultados en formatos como PNG, PDF o CSV.\n\n1.11.3.1 Guardar gráficos con ggsave()\nLa función ggsave() permite guardar el último gráfico generado.\n\n# Guardar un gráfico en formato PNG   \nggsave(\"grafico_peso.png\", width = 8, height = 6, dpi = 300)      \n# Guardar un gráfico en formato PDF   \nggsave(\"grafico_peso.pdf\", width = 8, height = 6)   \n\n\nwidth y height: Dimensiones del gráfico.\ndpi: Resolución del gráfico (300 es ideal para publicaciones).\n\n\n\n1.11.3.2 Guardar tablas en formato CSV\nPara exportar un data frame como archivo CSV, se utiliza la función write.csv().\n\n# Guardar el data frame en un archivo CSV   \nwrite.csv(datos_2002, \"datos_estudiantes.csv\", row.names = FALSE)   \n\n\nrow.names = FALSE: Evita incluir los índices como una columna adicional.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#material-de-apoyo",
    "href": "teoria.html#material-de-apoyo",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.12 Material de apoyo",
    "text": "1.12 Material de apoyo\n\nGuia de instalación de R y RStudio elaborada por el Dr. Byron Gonzalez\nTutorial en YouTube “Cómo instalar R y RStudio en menos de 2 minutos - 2024”. Elaborado por Herbert Lizama.\nR para ciencia de datos por Handley Wickham & Garrett Grolemund",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "teoria.html#referencias",
    "href": "teoria.html#referencias",
    "title": "1  INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS",
    "section": "1.13 Referencias",
    "text": "1.13 Referencias\nAllaire, J. J., Xie, Y., & McPherson, J. (2022). R Markdown: The Definitive Guide. Chapman & Hall/CRC. https://www.taylorfrancis.com/books/mono/10.1201/9781138359444/markdown-yihui-xie-allaire-garrett-grolemund\nIhaka, R., & Gentleman, R. (1996). R: A Language for Data Analysis and Graphics. Journal of Computational and Graphical Statistics, 5(3), 299–314.\nR Core Team. (2023). R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing. https://www.Rproject.org\nBaker, M. (2016). 1,500 scientists lift the lid on reproducibility. Nature, 533(7604), 452–454. https://doi.org/10.1038/533452a\nNational Academies of Sciences, Engineering, and Medicine. (2019). Reproducibility and replicability in science. National Academies Press. https://doi.org/10.17226/25303\nThe Turing Way Community. (2023). The Turing Way: A handbook for reproducible, ethical and collaborative research. https://the-turing-way.netlify.app\nGentleman, R., & Temple Lang, D. (2007). Statistical analyses and reproducible research. Journal of Computational and Graphical Statistics, 16(1), 1-23. https://doi.org/10.1198/106186007X178663\nWilkinson, M. D. et al. (2016). The FAIR Guiding Principles for scientific data management and stewardship. Scientific Data, 3(1), 160018. https://doi.org/10.1038/sdata.2016.18\nKolb, D. A. (1984). Experiential learning: Experience as the source of learning and development. Prentice Hall.\nHmelo-Silver, C. E., Duncan, R. G., & Chinn, C. A. (2007). Scaffolding and achievement in problem-based and inquiry learning: A response to Kirschner, Sweller, and Clark (2006). Educational Psychologist, 42(2), 99–107. https://doi.org/10.1080/00461520701263368",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>INTRODUCCIÓN AL ENTORNO DE PROGRAMACIÓN R Y SU APLICACIÓN EN EL ANÁLISIS ESTADÍSTICO DE DATOS</span>"
    ]
  },
  {
    "objectID": "summary.html#qué-es-r",
    "href": "summary.html#qué-es-r",
    "title": "1  Conceptos básicos de R",
    "section": "",
    "text": "1.1.1 ¿Qué hace tan especial a R para el análisis estadístico?\n\nCódigo Abierto: Sin costos de licencia, ideal para proyectos académicos (R Core Team, 2023).\nExtensible: Hasta 2023 existen más de 19,000 paquetes disponibles en CRAN (Comprehensive R Archive Network) especializados en añadirle nuevas funciones para resolver necesidades especificas usando R, la funcionalidad de estos paquetes va desde hacer mejores gráficos de una manera sencilla hasta facilita procesos estadísticos (CRAN, 2023).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "summary.html#qué-es-rstudio",
    "href": "summary.html#qué-es-rstudio",
    "title": "1  Conceptos básicos de R",
    "section": "1.2 ¿Qué es RStudio?",
    "text": "1.2 ¿Qué es RStudio?\nRStudio es un Entorno de Desarrollo Integrado (IDE) que optimiza el flujo de trabajo en R, destacándose por su sistema de proyectos y herramientas para reproducibilidad (Allaire et al., 2022).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "summary.html#reproducibilidad-replicabilidad-qué-tienen-que-ver-con-r-y-rstudio",
    "href": "summary.html#reproducibilidad-replicabilidad-qué-tienen-que-ver-con-r-y-rstudio",
    "title": "1  Conceptos básicos de R",
    "section": "1.3 Reproducibilidad, Replicabilidad ¿Qué tienen que ver con R y RStudio?",
    "text": "1.3 Reproducibilidad, Replicabilidad ¿Qué tienen que ver con R y RStudio?\nEl 64% de los investigadores enfrentan dificultades para replicar estudios previos debido a documentación insuficiente (Baker, 2016).\n\nSituación: Usas Excel y/o infostat. Tus cálculos están en celdas ocultas, y los gráficos se ajustan manualmente.\nResultado: Nadie, ni tú en 6 meses, podrá repetir exactamente tu análisis.\nSolución: Realizar el análisis de los datos y la construcción de los gráficos aprovechando las herramientas que nos provee R para generar un script donde se documenta el paso a paso que se siguió para realizar el análisis y llegar a las conclusiones.\n\n\n\n\n“Un script de R es como una receta: cualquiera puede seguirla paso a paso para recrear tu ‘platillo’ científico. Así como, cualquiera puede re interpretarla para crear su propio ‘platillo’ científico.”\n\n\n\n1.3.1 Definición formal de reproducibilidad y replicabilidad\nLa reproducibilidad (capacidad de obtener los mismos resultados con los mismos datos y métodos) y la replicabilidad (consistencia de hallazgos en nuevos contextos) son fundamentales para la credibilidad científica (National Academies of Sciences, Engineering, and Medicine, 2019).\n\n\n1.3.2 Beneficios de la adopción de R para la Ciencia\n\nTransparencia: Código accesible para revisión por pares (The Turing Way Community, 2023).\nEficiencia: Reutilización de métodos en nuevos estudios (Gentleman & Temple Lang, 2007).\nCredibilidad: Cumplimiento de estándares FAIR (Wilkinson et al., 2016).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "summary.html#reproducibilidad-y-replicabilidad-en-la-investigación-científica",
    "href": "summary.html#reproducibilidad-y-replicabilidad-en-la-investigación-científica",
    "title": "1  Conceptos básicos de R",
    "section": "1.3 Reproducibilidad y replicabilidad en la investigación científica",
    "text": "1.3 Reproducibilidad y replicabilidad en la investigación científica\nEl 64% de los investigadores enfrenta dificultades para replicar estudios previos debido a una documentación insuficiente (Baker, 2016).\nProblemática: En herramientas como Excel o Infostat, los cálculos suelen realizarse en celdas ocultas y los gráficos se ajustan manualmente. Esto dificulta la replicación exacta de los análisis, incluso por parte del mismo autor después de un tiempo.\nSolución: el uso de R permite documentar cada paso del análisis mediante scripts, lo que garantiza que los procedimientos puedan ser replicados y reinterpretados en el futuro.\n\n\n\nUn script en R puede compararse con una receta, ya que documenta cada paso necesario para reproducir un análisis científico. Además, este enfoque permite reinterpretar los procedimientos para adaptarlos a nuevos contextos.\n\n\n\n1.3.1 Reproducibilidad\nLa reproducibilidad se define como la capacidad de obtener los mismos resultados utilizando los mismos datos y métodos que se emplearon en un análisis original. Este concepto es esencial en la investigación científica, ya que permite verificar y validar los resultados de un estudio. Según el informe de las National Academies of Sciences, Engineering, and Medicine (2019), la reproducibilidad garantiza que los resultados puedan ser replicados por otros investigadores o por el mismo autor en el futuro, siempre que se disponga de los datos y métodos originales.\n\n1.3.1.1 Características clave de la reproducibilidad:\n\nUso de los mismos datos: Los datos originales deben estar disponibles y ser accesibles para que otros puedan replicar el análisis.\nMétodos documentados: Es necesario que los pasos, herramientas y configuraciones utilizadas en el análisis estén claramente documentados.\nResultados consistentes: Al repetir el análisis con los mismos datos y métodos, los resultados deben ser idénticos.\n\n\n\n1.3.1.2 Importancia de la reproducibilidad:\n\nTransparencia: Permite que otros investigadores comprendan cómo se obtuvieron los resultados.\nVerificación: Facilita la identificación de errores o inconsistencias en el análisis original.\nColaboración: Proporciona una base sólida para que otros investigadores puedan construir sobre el trabajo existente.\n\nEn el contexto de R y RStudio, la reproducibilidad se logra mediante el uso de scripts que documentan cada paso del análisis. Estos scripts actúan como una “receta” que otros pueden seguir para obtener los mismos resultados. Además, herramientas como R Markdown y Quarto permiten combinar código, texto y resultados en un solo documento, lo que mejora aún más la transparencia y la reproducibilidad.\n\n\n\n1.3.2 Replicabilidad\nLa replicabilidad, por otro lado, se refiere a la capacidad de obtener resultados consistentes al realizar un estudio similar en un contexto diferente, utilizando nuevos datos o métodos ligeramente modificados. Este concepto evalúa la generalización de los hallazgos y su aplicabilidad en diferentes escenarios. De acuerdo con las National Academies of Sciences, Engineering, and Medicine (2019), la replicabilidad es fundamental para evaluar la robustez y la aplicabilidad de los resultados científicos en nuevos contextos.\n\n1.3.2.1 Características clave de la replicabilidad:\n\nNuevos datos: Se utilizan datos diferentes a los del estudio original, pero que representan un contexto similar.\nMétodos adaptados: Los métodos pueden ser ajustados o modificados para adaptarse a las características de los nuevos datos.\nResultados consistentes: Los hallazgos deben ser coherentes con los del estudio original, aunque no necesariamente idénticos.\n\n\n\n1.3.2.2 Importancia de la replicabilidad:\n\nGeneralización: Evalúa si los resultados del estudio original son aplicables en otros contextos o poblaciones.\nCredibilidad científica: Refuerza la confianza en los hallazgos al demostrar que no son producto de circunstancias específicas.\nAvance del conocimiento: Permite explorar nuevas aplicaciones o extensiones de los hallazgos originales.\n\nEn el contexto de R y RStudio, la replicabilidad se facilita mediante el uso de herramientas que permiten adaptar los análisis a nuevos conjuntos de datos. Por ejemplo, los scripts en R pueden ser reutilizados y ajustados para trabajar con datos diferentes, mientras que los paquetes como dplyr y ggplot2 permiten realizar análisis y visualizaciones de manera flexible y adaptable.\n\n\n\n1.3.3 Beneficios de la adopción de R para la Ciencia\n\nTransparencia: El código generado en R es accesible para revisión por pares, lo que fomenta la transparencia en los análisis (The Turing Way Community, 2023).\nEficiencia: Los métodos desarrollados en R pueden ser reutilizados en nuevos estudios, lo que optimiza los recursos y el tiempo (Gentleman & Temple Lang, 2007).\nCredibilidad: El uso de R facilita el cumplimiento de los principios FAIR (Findable, Accessible, Interoperable, Reusable), promoviendo la gestión adecuada de los datos científicos (Wilkinson et al., 2016).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "basics.html",
    "href": "basics.html",
    "title": "Conceptos básicos de R",
    "section": "",
    "text": "¿Qué es R?\nR es un lenguaje de programación y entorno computacional especializado en análisis estadístico y visualización científica, diseñado para investigación reproducible (Ihaka & Gentleman, 1996).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "basics.html#qué-es-r",
    "href": "basics.html#qué-es-r",
    "title": "Conceptos básicos de R",
    "section": "",
    "text": "¿Qué hace tan especial a R para el análisis estadístico?\n\nCódigo Abierto: Sin costos de licencia, ideal para proyectos académicos (R Core Team, 2023).\nExtensible: Hasta 2023 existen más de 19,000 paquetes disponibles en CRAN (Comprehensive R Archive Network) especializados en añadirle nuevas funciones para resolver necesidades especificas usando R, la funcionalidad de estos paquetes va desde hacer mejores gráficos de una manera sencilla hasta facilita procesos estadísticos (CRAN, 2023).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "basics.html#qué-es-rstudio",
    "href": "basics.html#qué-es-rstudio",
    "title": "Conceptos básicos de R",
    "section": "¿Qué es RStudio?",
    "text": "¿Qué es RStudio?\nRStudio es un Entorno de Desarrollo Integrado (IDE) que optimiza el flujo de trabajo en R, destacándose por su sistema de proyectos y herramientas para reproducibilidad (Allaire et al., 2022).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "basics.html#reproducibilidad-y-replicabilidad-en-la-investigación-científica",
    "href": "basics.html#reproducibilidad-y-replicabilidad-en-la-investigación-científica",
    "title": "Conceptos básicos de R",
    "section": "Reproducibilidad y replicabilidad en la investigación científica",
    "text": "Reproducibilidad y replicabilidad en la investigación científica\nEl 64% de los investigadores enfrenta dificultades para replicar estudios previos debido a una documentación insuficiente (Baker, 2016).\nProblemática: En herramientas como Excel o Infostat, los cálculos suelen realizarse en celdas ocultas y los gráficos se ajustan manualmente. Esto dificulta la replicación exacta de los análisis, incluso por parte del mismo autor después de un tiempo.\nSolución: el uso de R permite documentar cada paso del análisis mediante scripts, lo que garantiza que los procedimientos puedan ser replicados y reinterpretados en el futuro.\n\n\n\n“Un script de R es como una receta: cualquiera puede seguirla paso a paso para recrear tu ‘platillo’ científico. Así como, cualquiera puede re interpretarla para crear su propio ‘platillo’ científico.”\n\n\n\nReproducibilidad\nLa reproducibilidad se define como la capacidad de obtener los mismos resultados utilizando los mismos datos y métodos que se emplearon en un análisis original. Este concepto es esencial en la investigación científica, ya que permite verificar y validar los resultados de un estudio. Según el informe de las National Academies of Sciences, Engineering, and Medicine (2019), la reproducibilidad garantiza que los resultados puedan ser replicados por otros investigadores o por el mismo autor en el futuro, siempre que se disponga de los datos y métodos originales.\n\nCaracterísticas clave de la reproducibilidad:\n\nUso de los mismos datos: Los datos originales deben estar disponibles y ser accesibles para que otros puedan replicar el análisis.\nMétodos documentados: Es necesario que los pasos, herramientas y configuraciones utilizadas en el análisis estén claramente documentados.\nResultados consistentes: Al repetir el análisis con los mismos datos y métodos, los resultados deben ser idénticos.\n\n\n\nImportancia de la reproducibilidad:\n\nTransparencia: Permite que otros investigadores comprendan cómo se obtuvieron los resultados.\nVerificación: Facilita la identificación de errores o inconsistencias en el análisis original.\nColaboración: Proporciona una base sólida para que otros investigadores puedan construir sobre el trabajo existente.\n\nEn el contexto de R y RStudio, la reproducibilidad se logra mediante el uso de scripts que documentan cada paso del análisis. Estos scripts actúan como una “receta” que otros pueden seguir para obtener los mismos resultados. Además, herramientas como R Markdown y Quarto permiten combinar código, texto y resultados en un solo documento, lo que mejora aún más la transparencia y la reproducibilidad.\n\n\n\nReplicabilidad\nLa replicabilidad, por otro lado, se refiere a la capacidad de obtener resultados consistentes al realizar un estudio similar en un contexto diferente, utilizando nuevos datos o métodos ligeramente modificados. Este concepto evalúa la generalización de los hallazgos y su aplicabilidad en diferentes escenarios. De acuerdo con las National Academies of Sciences, Engineering, and Medicine (2019), la replicabilidad es fundamental para evaluar la robustez y la aplicabilidad de los resultados científicos en nuevos contextos.\n\nCaracterísticas clave de la replicabilidad:\n\nNuevos datos: Se utilizan datos diferentes a los del estudio original, pero que representan un contexto similar.\nMétodos adaptados: Los métodos pueden ser ajustados o modificados para adaptarse a las características de los nuevos datos.\nResultados consistentes: Los hallazgos deben ser coherentes con los del estudio original, aunque no necesariamente idénticos.\n\n\n\nImportancia de la replicabilidad:\n\nGeneralización: Evalúa si los resultados del estudio original son aplicables en otros contextos o poblaciones.\nCredibilidad científica: Refuerza la confianza en los hallazgos al demostrar que no son producto de circunstancias específicas.\nAvance del conocimiento: Permite explorar nuevas aplicaciones o extensiones de los hallazgos originales.\n\nEn el contexto de R y RStudio, la replicabilidad se facilita mediante el uso de herramientas que permiten adaptar los análisis a nuevos conjuntos de datos. Por ejemplo, los scripts en R pueden ser reutilizados y ajustados para trabajar con datos diferentes, mientras que los paquetes como dplyr y ggplot2 permiten realizar análisis y visualizaciones de manera flexible y adaptable.\n\n\n\nBeneficios de la adopción de R para la Ciencia\n\nTransparencia: El código generado en R es accesible para revisión por pares, lo que fomenta la transparencia en los análisis (The Turing Way Community, 2023).\nEficiencia: Los métodos desarrollados en R pueden ser reutilizados en nuevos estudios, lo que optimiza los recursos y el tiempo (Gentleman & Temple Lang, 2007).\nCredibilidad: El uso de R facilita el cumplimiento de los principios FAIR (Findable, Accessible, Interoperable, Reusable), promoviendo la gestión adecuada de los datos científicos (Wilkinson et al., 2016).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Conceptos básicos de R</span>"
    ]
  },
  {
    "objectID": "Entorno.html",
    "href": "Entorno.html",
    "title": "Entorno de desarrollo: RStudio",
    "section": "",
    "text": "¿Qué es RStudio?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Entorno de desarrollo: RStudio</span>"
    ]
  },
  {
    "objectID": "Entorno.html#características-y-ventajas-de-rstudio",
    "href": "Entorno.html#características-y-ventajas-de-rstudio",
    "title": "Entorno de desarrollo: RStudio",
    "section": "Características y ventajas de RStudio",
    "text": "Características y ventajas de RStudio",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Entorno de desarrollo: RStudio</span>"
    ]
  },
  {
    "objectID": "Entorno.html#reproducibilidad-y-replicabilidad-en-r-y-rstudio",
    "href": "Entorno.html#reproducibilidad-y-replicabilidad-en-r-y-rstudio",
    "title": "Entorno de desarrollo: RStudio",
    "section": "Reproducibilidad y replicabilidad en R y RStudio",
    "text": "Reproducibilidad y replicabilidad en R y RStudio",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Entorno de desarrollo: RStudio</span>"
    ]
  },
  {
    "objectID": "install.html",
    "href": "install.html",
    "title": "Instalación y configuración",
    "section": "",
    "text": "Descarga de R y RStudio",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Instalación y configuración</span>"
    ]
  },
  {
    "objectID": "install.html#instalación-de-r-y-rstudio",
    "href": "install.html#instalación-de-r-y-rstudio",
    "title": "Instalación y configuración",
    "section": "Instalación de R y RStudio",
    "text": "Instalación de R y RStudio",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Instalación y configuración</span>"
    ]
  },
  {
    "objectID": "install.html#configuración-inicial",
    "href": "install.html#configuración-inicial",
    "title": "Instalación y configuración",
    "section": "Configuración inicial",
    "text": "Configuración inicial",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Instalación y configuración</span>"
    ]
  },
  {
    "objectID": "install.html#organización-de-proyectos",
    "href": "install.html#organización-de-proyectos",
    "title": "Instalación y configuración",
    "section": "Organización de proyectos",
    "text": "Organización de proyectos",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Instalación y configuración</span>"
    ]
  },
  {
    "objectID": "inicio.html",
    "href": "inicio.html",
    "title": "Primeros pasos en R",
    "section": "",
    "text": "Creación de scripts en RStudio",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Primeros pasos en R</span>"
    ]
  },
  {
    "objectID": "inicio.html#guardado-y-organización-de-archivos",
    "href": "inicio.html#guardado-y-organización-de-archivos",
    "title": "Primeros pasos en R",
    "section": "Guardado y organización de archivos",
    "text": "Guardado y organización de archivos",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Primeros pasos en R</span>"
    ]
  },
  {
    "objectID": "inicio.html#introducción-a-los-objetos-en-r",
    "href": "inicio.html#introducción-a-los-objetos-en-r",
    "title": "Primeros pasos en R",
    "section": "Introducción a los objetos en R",
    "text": "Introducción a los objetos en R",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Primeros pasos en R</span>"
    ]
  },
  {
    "objectID": "inicio.html#tipos-de-objetos-en-r-numéricos-texto-factores-lógicos",
    "href": "inicio.html#tipos-de-objetos-en-r-numéricos-texto-factores-lógicos",
    "title": "Primeros pasos en R",
    "section": "Tipos de objetos en R (numéricos, texto, factores, lógicos)",
    "text": "Tipos de objetos en R (numéricos, texto, factores, lógicos)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Primeros pasos en R</span>"
    ]
  },
  {
    "objectID": "datos.html",
    "href": "datos.html",
    "title": "Estructura de datos en R",
    "section": "",
    "text": "Vectores: creación y manipulación",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Estructura de datos en R</span>"
    ]
  },
  {
    "objectID": "datos.html#data-frames-creación-ventajas-y-manipulación",
    "href": "datos.html#data-frames-creación-ventajas-y-manipulación",
    "title": "Estructura de datos en R",
    "section": "Data frames: creación, ventajas y manipulación",
    "text": "Data frames: creación, ventajas y manipulación",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Estructura de datos en R</span>"
    ]
  },
  {
    "objectID": "datos.html#comparación-entre-data-frames-y-listas",
    "href": "datos.html#comparación-entre-data-frames-y-listas",
    "title": "Estructura de datos en R",
    "section": "Comparación entre data frames y listas",
    "text": "Comparación entre data frames y listas",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Estructura de datos en R</span>"
    ]
  },
  {
    "objectID": "importacion.html",
    "href": "importacion.html",
    "title": "Importacion de datos",
    "section": "",
    "text": "Importación de archivos CSV",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importacion de datos</span>"
    ]
  },
  {
    "objectID": "importacion.html#importación-de-archivos-excel",
    "href": "importacion.html#importación-de-archivos-excel",
    "title": "Importacion de datos",
    "section": "Importación de archivos Excel",
    "text": "Importación de archivos Excel",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importacion de datos</span>"
    ]
  },
  {
    "objectID": "importacion.html#configuración-del-directorio-de-trabajo",
    "href": "importacion.html#configuración-del-directorio-de-trabajo",
    "title": "Importacion de datos",
    "section": "Configuración del directorio de trabajo",
    "text": "Configuración del directorio de trabajo",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importacion de datos</span>"
    ]
  },
  {
    "objectID": "operadores.html",
    "href": "operadores.html",
    "title": "Operadores en R",
    "section": "",
    "text": "Operadores aritméticos y lógicos",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Operadores en R</span>"
    ]
  },
  {
    "objectID": "operadores.html#ejemplos-prácticos-de-uso-de-operadores",
    "href": "operadores.html#ejemplos-prácticos-de-uso-de-operadores",
    "title": "Operadores en R",
    "section": "Ejemplos prácticos de uso de operadores",
    "text": "Ejemplos prácticos de uso de operadores",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Operadores en R</span>"
    ]
  },
  {
    "objectID": "manipulacion.html",
    "href": "manipulacion.html",
    "title": "Manipulación de datos",
    "section": "",
    "text": "Introducción a los paquetes dplyr y tidyr",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Manipulación de datos</span>"
    ]
  },
  {
    "objectID": "manipulacion.html#operaciones-básicas-filtrar-seleccionar-agrupar-y-resumir-datos",
    "href": "manipulacion.html#operaciones-básicas-filtrar-seleccionar-agrupar-y-resumir-datos",
    "title": "Manipulación de datos",
    "section": "Operaciones básicas: filtrar, seleccionar, agrupar y resumir datos",
    "text": "Operaciones básicas: filtrar, seleccionar, agrupar y resumir datos",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Manipulación de datos</span>"
    ]
  },
  {
    "objectID": "manipulacion.html#uso-de-pipes-para-mejorar-la-legibilidad-del-código",
    "href": "manipulacion.html#uso-de-pipes-para-mejorar-la-legibilidad-del-código",
    "title": "Manipulación de datos",
    "section": "Uso de pipes (%>%) para mejorar la legibilidad del código",
    "text": "Uso de pipes (%&gt;%) para mejorar la legibilidad del código",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Manipulación de datos</span>"
    ]
  },
  {
    "objectID": "visualizacion.html",
    "href": "visualizacion.html",
    "title": "visualización de datos",
    "section": "",
    "text": "Introducción al paquete ggplot2",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>visualización de datos</span>"
    ]
  },
  {
    "objectID": "visualizacion.html#creación-de-gráficos-básicos-histogramas-scatterplots-boxplots",
    "href": "visualizacion.html#creación-de-gráficos-básicos-histogramas-scatterplots-boxplots",
    "title": "visualización de datos",
    "section": "Creación de gráficos básicos: histogramas, scatterplots, boxplots",
    "text": "Creación de gráficos básicos: histogramas, scatterplots, boxplots",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>visualización de datos</span>"
    ]
  },
  {
    "objectID": "visualizacion.html#personalización-de-gráficos",
    "href": "visualizacion.html#personalización-de-gráficos",
    "title": "visualización de datos",
    "section": "Personalización de gráficos",
    "text": "Personalización de gráficos",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>visualización de datos</span>"
    ]
  },
  {
    "objectID": "exportacion.html",
    "href": "exportacion.html",
    "title": "Exportación de resultados",
    "section": "",
    "text": "Guardar gráficos con ggsave",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Exportación de resultados</span>"
    ]
  },
  {
    "objectID": "exportacion.html#exportación-de-tablas-en-formato-csv",
    "href": "exportacion.html#exportación-de-tablas-en-formato-csv",
    "title": "Exportación de resultados",
    "section": "Exportación de tablas en formato CSV",
    "text": "Exportación de tablas en formato CSV",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Exportación de resultados</span>"
    ]
  },
  {
    "objectID": "paquetes.html",
    "href": "paquetes.html",
    "title": "Paquetes en R",
    "section": "",
    "text": "¿Qué son los paquetes en R?",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Paquetes en R</span>"
    ]
  },
  {
    "objectID": "paquetes.html#instalación-y-carga-de-paquetes",
    "href": "paquetes.html#instalación-y-carga-de-paquetes",
    "title": "Paquetes en R",
    "section": "Instalación y carga de paquetes",
    "text": "Instalación y carga de paquetes",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Paquetes en R</span>"
    ]
  },
  {
    "objectID": "paquetes.html#paquetes-recomendados-para-tareas-específicas",
    "href": "paquetes.html#paquetes-recomendados-para-tareas-específicas",
    "title": "Paquetes en R",
    "section": "Paquetes recomendados para tareas específicas",
    "text": "Paquetes recomendados para tareas específicas",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Paquetes en R</span>"
    ]
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "Licencia",
    "section": "",
    "text": "Creative Commons Legal Code\nCC0 1.0 Universal\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.\nStatement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an “owner”) of an original work of authorship and/or a database (each, a “Work”).\nCertain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (“Commons”) that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the “Affirmer”), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (“Copyright and Related Rights”). Copyright and Related Rights include, but are not limited to, the following:\n\n\n\nthe right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work;\nmoral rights retained by the original author(s) and/or performer(s);\npublicity and privacy rights pertaining to a person’s image or likeness depicted in a Work;\nrights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below;\nrights protecting the extraction, dissemination, use and reuse of data in a Work;\ndatabase rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and\nother similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof.\n\n\n\nWaiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer’s Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the “Waiver”). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer’s heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer’s express Statement of Purpose.\nPublic License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer’s express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer’s Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the “License”). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer’s express Statement of Purpose.\nLimitations and Disclaimers.\n\n\n\nNo trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document.\nAffirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.\nAffirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person’s Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work.\nAffirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work."
  },
  {
    "objectID": "index.html#en-qué-consiste-este-manual",
    "href": "index.html#en-qué-consiste-este-manual",
    "title": "Introducción al entorno de programacón R y su aplicacion en el análisis estadístico de datos",
    "section": "¿En qué consiste este manual?",
    "text": "¿En qué consiste este manual?\nEl presente manual, tiene como objetivo proporcionar una guía práctica y estructurada para el aprendizaje y uso del lenguaje de programación R. Este se diseñó para facilitar la comprensión de conceptos fundamentales, desde la instalación de R y RStudio hasta la manipulación de datos, visualización gráfica y exportación de resultados.\nR, como herramienta de código abierto, se ha consolidado como un estándar en el análisis estadístico y la ciencia de datos, gracias a su flexibilidad, extensibilidad y capacidad para garantizar la reproducibilidad científica. A lo largo de este documento, se exploran las principales características de R y su entorno de desarrollo integrado (IDE), RStudio, destacando su utilidad en proyectos académicos y profesionales. Además, se incluyen ejemplos prácticos, recomendaciones de buenas prácticas y recursos adicionales para profundizar en el aprendizaje.\nEste manual está dirigido a estudiantes, investigadores y profesionales interesados en adquirir habilidades en análisis de datos y programación estadística, con un enfoque en la claridad, la organización y la reproducibilidad.",
    "crumbs": [
      "Introducción"
    ]
  },
  {
    "objectID": "index.html#cómo-esta-organizado-este-manual",
    "href": "index.html#cómo-esta-organizado-este-manual",
    "title": "Introducción al entorno de programacón R y su aplicacion en el análisis estadístico de datos",
    "section": "¿Cómo esta organizado este manual?",
    "text": "¿Cómo esta organizado este manual?\nEste manual está diseñado para guiar a principiantes en el uso del lenguaje de programación R, con un enfoque en el análisis estadístico. Su estructura sigue un enfoque progresivo, comenzando con los conceptos más básicos y avanzando hacia herramientas y técnicas más complejas. Cada sección incluye explicaciones claras, ejemplos prácticos y ejercicios que permiten aplicar lo aprendido. Además, se han incorporado recomendaciones y buenas prácticas para facilitar el aprendizaje y fomentar la reproducibilidad en los análisis.\nEl contenido se organiza en los siguientes capítulos principales:\n\nIntroducción a R y RStudio: Se presenta qué es R, sus características principales y cómo instalar tanto R como RStudio. También se explica cómo configurar el entorno de trabajo.\nConceptos básicos de R: Se abordan los fundamentos del lenguaje, como la creación de objetos, tipos de datos y operadores.\nManipulación de datos: Se introduce el uso de herramientas como dplyr y tidyr para transformar y organizar datos de manera eficiente.\nVisualización de datos: Se enseña a crear gráficos básicos y personalizados utilizando el paquete ggplot2.\nExportación de resultados: Se explica cómo guardar gráficos, tablas y otros resultados en formatos útiles para informes y presentaciones.\nMaterial de apoyo y referencias: Se incluyen recursos adicionales para profundizar en el aprendizaje de R.\n\nCada capítulo está diseñado para ser independiente, permitiendo que los lectores avancen a su propio ritmo y consulten las secciones según sus necesidades.",
    "crumbs": [
      "Introducción"
    ]
  },
  {
    "objectID": "index.html#pre-requisitos",
    "href": "index.html#pre-requisitos",
    "title": "Introducción al entorno de programacón R y su aplicacion en el análisis estadístico de datos",
    "section": "Pre requisitos",
    "text": "Pre requisitos\nEste manual no requiere conocimientos previos en programación ni en análisis estadístico. Está diseñado específicamente para principiantes, por lo que se parte desde cero, explicando cada concepto de manera clara y detallada. Todo lo que se necesita es:\n\nInterés por aprender: La curiosidad y disposición para explorar un nuevo lenguaje de programación.\nAcceso a una computadora: Con capacidad para instalar R y RStudio, herramientas que se explican paso a paso en el manual.\nPaciencia y práctica: Como cualquier habilidad nueva, aprender R requiere tiempo y dedicación. Los ejemplos y ejercicios incluidos están diseñados para facilitar este proceso.\n\nCon este enfoque, cualquier persona, independientemente de su experiencia previa, podrá utilizar este manual como una guía para iniciarse en el análisis estadístico con R.",
    "crumbs": [
      "Introducción"
    ]
  },
  {
    "objectID": "index.html#colofón",
    "href": "index.html#colofón",
    "title": "Introducción al entorno de programacón R y su aplicacion en el análisis estadístico de datos",
    "section": "Colofón",
    "text": "Colofón\nLa versión en línea de este manual estará disponible en [enlace de publicación] (actualizar una vez publicado). La fuente del manual en español se encuentra en el repositorio: https://github.com/Ludwing-MJ/introduccion_R_CETE. Este manual ha sido desarrollado utilizando Quarto, una herramienta que facilita la conversión de archivos .qmd en formatos publicables como HTML, PDF y EPUB. Además, Quarto permite trabajar con una interfaz visual y amigable para el desarrollador desde RStudio, optimizando la creación de contenido reproducible y accesible.\nEste manual fue construido con:\n\ndevtools::session_info()\n\nWarning in system2(\"quarto\", \"-V\", stdout = TRUE, env = paste0(\"TMPDIR=\", : el\ncomando ejecutado '\"quarto\"\nTMPDIR=C:/Users/Usuario/AppData/Local/Temp/RtmpEPJibE/file30283074766e -V'\ntiene el estatus 1\n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31 ucrt)\n os       Windows 11 x64 (build 26100)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Guatemala.utf8\n ctype    Spanish_Guatemala.utf8\n tz       America/Guatemala\n date     2025-03-18\n pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n quarto   NA @ C:\\\\Users\\\\Usuario\\\\AppData\\\\Local\\\\Programs\\\\Quarto\\\\bin\\\\quarto.exe\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n cachem        1.1.0   2024-05-16 [1] CRAN (R 4.4.2)\n cli           3.6.3   2024-06-21 [1] CRAN (R 4.4.2)\n devtools      2.4.5   2022-10-11 [1] CRAN (R 4.4.3)\n digest        0.6.37  2024-08-19 [1] CRAN (R 4.4.2)\n ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.4.3)\n evaluate      1.0.3   2025-01-10 [1] CRAN (R 4.4.2)\n fastmap       1.2.0   2024-05-15 [1] CRAN (R 4.4.2)\n fs            1.6.5   2024-10-30 [1] CRAN (R 4.4.2)\n glue          1.8.0   2024-09-30 [1] CRAN (R 4.4.2)\n htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.4.2)\n htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.4.3)\n httpuv        1.6.15  2024-03-26 [1] CRAN (R 4.4.3)\n jsonlite      1.8.9   2024-09-20 [1] CRAN (R 4.4.2)\n knitr         1.49    2024-11-08 [1] CRAN (R 4.4.2)\n later         1.4.1   2024-11-27 [1] CRAN (R 4.4.3)\n lifecycle     1.0.4   2023-11-07 [1] CRAN (R 4.4.2)\n magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.4.2)\n memoise       2.0.1   2021-11-26 [1] CRAN (R 4.4.2)\n mime          0.12    2021-09-28 [1] CRAN (R 4.4.0)\n miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.4.3)\n pkgbuild      1.4.6   2025-01-16 [1] CRAN (R 4.4.3)\n pkgload       1.4.0   2024-06-28 [1] CRAN (R 4.4.3)\n profvis       0.4.0   2024-09-20 [1] CRAN (R 4.4.3)\n promises      1.3.2   2024-11-28 [1] CRAN (R 4.4.3)\n purrr         1.0.4   2025-02-05 [1] CRAN (R 4.4.2)\n R6            2.5.1   2021-08-19 [1] CRAN (R 4.4.2)\n Rcpp          1.0.14  2025-01-12 [1] CRAN (R 4.4.2)\n remotes       2.5.0   2024-03-17 [1] CRAN (R 4.4.3)\n rlang         1.1.5   2025-01-17 [1] CRAN (R 4.4.2)\n rmarkdown     2.29    2024-11-04 [1] CRAN (R 4.4.2)\n rstudioapi    0.17.1  2024-10-22 [1] CRAN (R 4.4.2)\n sessioninfo   1.2.3   2025-02-05 [1] CRAN (R 4.4.3)\n shiny         1.10.0  2024-12-14 [1] CRAN (R 4.4.3)\n urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.4.3)\n usethis       3.1.0   2024-11-26 [1] CRAN (R 4.4.3)\n vctrs         0.6.5   2023-12-01 [1] CRAN (R 4.4.2)\n xfun          0.50    2025-01-07 [1] CRAN (R 4.4.2)\n xtable        1.8-4   2019-04-21 [1] CRAN (R 4.4.3)\n\n [1] C:/Users/Usuario/AppData/Local/R/win-library/4.4\n [2] C:/Program Files/R/R-4.4.2/library\n\n──────────────────────────────────────────────────────────────────────────────",
    "crumbs": [
      "Introducción"
    ]
  },
  {
    "objectID": "references.html#material-de-apoyo",
    "href": "references.html#material-de-apoyo",
    "title": "12  Material de apoyo y referencias",
    "section": "",
    "text": "Tutorial en YouTube “Cómo instalar R y RStudio en menos de 2 minutos - 2024”. Elaborado por Herbert Lizama.\nR para ciencia de datos por Handley Wickham & Garrett Grolemund",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Material de apoyo y referencias</span>"
    ]
  },
  {
    "objectID": "references.html#referencias",
    "href": "references.html#referencias",
    "title": "12  Material de apoyo y referencias",
    "section": "12.2 Referencias",
    "text": "12.2 Referencias\n\nAllaire, J. J., Xie, Y., & McPherson, J. (2022). R Markdown: The Definitive Guide. Chapman & Hall/CRC. https://www.taylorfrancis.com/books/mono/10.1201/9781138359444/markdown-yihui-xie-allaire-garrett-grolemund\nBaker, M. (2016). 1,500 scientists lift the lid on reproducibility. Nature, 533(7604), 452–454. https://doi.org/10.1038/533452a\nGentleman, R., & Temple Lang, D. (2007). Statistical analyses and reproducible research. Journal of Computational and Graphical Statistics, 16(1), 1–23. https://doi.org/10.1198/106186007X178663\nHmelo-Silver, C. E., Duncan, R. G., & Chinn, C. A. (2007). Scaffolding and achievement in problem-based and inquiry learning: A response to Kirschner, Sweller, and Clark (2006). Educational Psychologist, 42(2), 99–107. https://doi.org/10.1080/00461520701263368\nIhaka, R., & Gentleman, R. (1996). R: A Language for Data Analysis and Graphics. Journal of Computational and Graphical Statistics, 5(3), 299–314.\nKolb, D. A. (1984). Experiential learning: Experience as the source of learning and development. Prentice Hall.\nNational Academies of Sciences, Engineering, and Medicine. (2019). Reproducibility and replicability in science. National Academies Press. https://doi.org/10.17226/25303\nR Core Team. (2023). R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing. https://www.Rproject.org\nThe Turing Way Community. (2023). The Turing Way: A handbook for reproducible, ethical and collaborative research. https://the-turing-way.netlify.app\nWilkinson, M. D. et al. (2016). The FAIR Guiding Principles for scientific data management and stewardship. Scientific Data, 3(1), 160018. https://doi.org/10.1038/sdata.2016.18",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Material de apoyo y referencias</span>"
    ]
  }
]